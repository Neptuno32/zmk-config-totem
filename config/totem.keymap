//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Num         1
#define SymL        2
#define SymR        3
#define Nav         4
#define Fun         5
#define SAI         6

&sk { quick-release; };

&lt {
    quick-tap-ms = <175>;
    tapping-term-ms = <200>;
    flavor = "balanced";
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SPACE>; };

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 15 26 27 16 6 7 17 28 8 18 29 9 19 30 31 35 36 37 32 33 34>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 20 34 35 36 37>;
        };

        ShiftCaps: ShiftCaps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTCAPS";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        hmlsc: hmlsc {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLSC";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 15 26 27 16 6 7 17 28 8 18 29 9 19 30 31 35 36 37 32 33 34>;
            hold-while-undecided;
        };

        hmrsc: hmrsc {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRSC";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 25 32 33 20 34 35 36 37>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        togsai {
            bindings = <&tog 6>;
            key-positions = <33 20>;
        };

        towasd {
            bindings = <&to 7>;
            key-positions = <31 36>;
        };

        rotsai {
            bindings = <&kp LA(SPACE)>;
            key-positions = <11 33>;
            layers = <6>;
            slow-release;
        };

        zoomsai {
            bindings = <&kp LC(SPACE)>;
            key-positions = <33 12>;
            layers = <6>;
            slow-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
            &kp Q            &kp W            &kp E                  &kp R                &kp T        &kp Y         &kp U                &kp I                  &kp O              &kp P
            &hml LEFT_GUI A  &hml LEFT_ALT S  &hmlsc LEFT_CONTROL D  &hmlsc LEFT_SHIFT F  &kp G        &kp H         &hmrsc LEFT_SHIFT J  &hmrsc LEFT_CONTROL K  &hmr LEFT_SHIFT L  &hmr LEFT_GUI SINGLE_QUOTE
&caps_word  &kp Z            &kp X            &kp C                  &kp V                &kp B        &kp N         &kp M                &kp COMMA              &kp DOT            &kp MINUS                   &sk LEFT_SHIFT
                                              &lt 5 ESCAPE           &lt 1 SPACE          &lt 3 TAB    &lt 2 RETURN  &lt 4 BACKSPACE      &lt 5 DELETE
            >;
        };

        Num {
            bindings = <
       &kp PRINTSCREEN  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &none        &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp SLASH
       &kp LC(Z)        &kp LC(X)          &kp LC(C)         &kp LC(V)        &kp LC(Y)    &kp MINUS     &kp N4  &kp N5  &kp N6  &kp DOT
&none  &none            &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &none        &kp PLUS      &kp N1  &kp N2  &kp N3  &kp CARET  &none
                                           &none             &none            &none        &kp EQUAL     &kp N0  &none
            >;

            label = "Num";
        };

        SymL {
            bindings = <
       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH     &kp DOLLAR  &kp PERCENT    &none  &none      &none      &none          &none
       &kp BACKSLASH    &kp TILDE    &kp PERCENT  &kp AMPS    &kp PIPE       &none  &kp LSHFT  &kp LCTRL  &kp RIGHT_ALT  &kp LGUI
&none  &none            &kp GRAVE    &none        &none       &none          &none  &none      &none      &none          &none     &none
                                     &none        &none       &none          &none  &none      &none
            >;
        };

        SymR {
            bindings = <
       &none     &none          &none      &none      &none    &kp PLUS      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp QUESTION
       &kp LGUI  &kp RIGHT_ALT  &kp LCTRL  &kp LSHFT  &none    &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp SLASH
&none  &none     &none          &none      &none      &none    &kp RA(N)     &kp CARET              &kp SEMICOLON      &kp COLON        &kp UNDERSCORE  &none
                                &none      &none      &none    &none         &kp EQUAL              &none
            >;
        };

        Nav {
            bindings = <
       &none     &none     &none      &none      &none    &none  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&none  &none     &none     &none      &none      &none    &none  &none           &none           &none         &none            &none
                           &none      &none      &none    &none  &none           &none
            >;
        };

        Fun {
            bindings = <
       &none     &none     &none      &none      &none    &none  &kp F7  &kp F8  &kp F9  &kp F12
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none  &kp F4  &kp F5  &kp F6  &kp F11
&none  &none     &none     &none      &none      &none    &none  &kp F1  &kp F2  &kp F3  &kp F10  &none
                           &none      &none      &none    &none  &none   &none
            >;
        };

        SAI {
            bindings = <
        &trans  &trans  &trans  &trans     &trans    &trans  &trans          &trans  &trans  &trans
        &trans  &trans  &trans  &trans     &trans    &trans  &trans          &trans  &trans  &trans
&tog 6  &trans  &trans  &trans  &trans     &trans    &trans  &trans          &trans  &trans  &trans  &none
                        &trans  &kp SPACE  &trans    &trans  &studio_unlock  &trans
            >;
        };

        wasd {
            bindings = <
         &kp TAB    &kp Q  &none  &kp E      &kp R        &kp N1  &kp N2    &kp N3        &kp N4     &kp N5
         &kp LSHFT  &kp A  &kp W  &kp D      &kp F        &none   &kp LEFT  &kp UP_ARROW  &kp RIGHT  &none
&kp ESC  &kp CAPS   &kp Z  &kp S  &kp C      &kp V        &none   &none     &kp DOWN      &none      &none   &to 0
                           &kp X  &kp SPACE  &kp LCTRL    &none   &none     &none
            >;
        };
    };
};
